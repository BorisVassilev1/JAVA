#version 450

#ifdef GL_ES
precision highp float;
#endif

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;

uniform vec2 resolution;

vec3 cam_pos = vec3(0.5,0.5,-0.6);

vec3 light = vec3(1.5,2.6,0.4);

struct Sphere {
	vec3 pos;
	float radius;
};

struct Ray
{
    vec3 origin;
    vec3 direction;
};

struct RayHit
{
    vec3 position;
    float distance;
    vec3 normal;
};

vec3 intersection(vec3 origin, vec3 ray, Sphere s) {
	return vec3(0.0,0.0,0.0);
}

vec3 lerp(vec3 v00, vec3 v10, vec3 v01, vec3 v11, float x, float y) {
	return mix(
	mix(v00,v10,x),
	mix(v01,v11,x),
	y
	);
}

Sphere sphs[3] = Sphere[3](
	Sphere(vec3(0.5,1.3,1.5),0.5),
	Sphere(vec3(1.3,0.2,2),0.7),
	Sphere(vec3(-0.4,0.5,2),0.5)
);

float angleBetween(vec3 v1, vec3 v2) {
    return acos(dot(normalize(v1), normalize(v2))) / 3.14;
}

void main() {
  vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  
  pixel = vec4(pixel_coords / resolution, 0.0, 1.0);
  
  
  
  
  imageStore(img_output, pixel_coords, pixel);
}