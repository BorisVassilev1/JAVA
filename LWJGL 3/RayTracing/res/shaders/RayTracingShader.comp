#version 460
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;

uniform vec2 resolution;

vec3 cam_pos = vec3(0.5,0.5,-0.1);

struct Sphere {
	vec3 pos;
	float radius;
};

float dist(vec3 a, Sphere p) {
	vec3 delta = a - p.pos;
	return length(delta) - p.radius;
}

vec3 lerp(vec3 v00, vec3 v10, vec3 v01, vec3 v11, float x, float y) {
	return mix(
	mix(v00,v10,x),
	mix(v01,v11,x),
	y
	);
}

void main() {
  	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  	vec3 globalDir = vec3(gl_GlobalInvocationID.xy / resolution.xy,0.0);
  	
  	vec3 dir = globalDir - cam_pos;
  	vec4 pixel = vec4(length(dir),0.0,0.0, 1.0);
  
  
  	imageStore(img_output, pixel_coords, pixel);
}